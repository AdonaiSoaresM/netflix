{"ast":null,"code":"import InputForm from \"./InputForm.vue\";\nimport useModalForm from \"@/hooks/useModalForm\";\n// import MovieService from \"@/common/service/movie.service\";\nimport SpinnerLoading from \"./SpinnerLoading.vue\";\nimport { useToast } from \"vue-toastification\";\nconst toast = useToast();\nconst modal = useModalForm();\nexport default {\n  name: \"FormMovie\",\n  components: {\n    InputForm,\n    SpinnerLoading\n  },\n  data() {\n    return {\n      uploadStatus: \"\",\n      uploadProgress: \"\",\n      toggle: false,\n      original_title: \"\",\n      year: \"\",\n      overview: \"\",\n      vote_average: \"\"\n    };\n  },\n  methods: {\n    setToggle(bool) {\n      this.toggle = bool;\n    },\n    updateData(input) {\n      this[input.field] = input.value;\n    },\n    async sendForm() {\n      console.log(document.querySelector(\"#video\").files[0].stream().pipeTo(console.log));\n      fetch('http://localhost:5077/movie/test', {\n        method: 'POST',\n        body: document.querySelector(\"#video\").files[0]\n      });\n      // this.uploadStatus = \"Uploading\";\n      // const fd = new FormData(this.$refs.form);\n      // var response = await MovieService.post(fd, this.checkUpload);\n      // if(response.sucess) this.endUpload(response);\n    },\n\n    closeModal() {\n      this.uploadStatus = \"\";\n      this.uploadProgress = \"\";\n      modal.close();\n    },\n    checkUpload(event) {\n      let progress = (event.loaded * 100 / event.total).toString();\n      this.uploadProgress = `- ${progress.substring(0, progress.indexOf(\".\"))}%`;\n      if (event.progress == 1) {\n        this.uploadProgress = \"\";\n        this.uploadStatus = \"Processing\";\n      }\n    },\n    endUpload(response) {\n      if (response.sucess) {\n        this.uploadStatus = \"Sucessfully\";\n        this.uploadProgress = \"\";\n      }\n      this.$refs.upload.style.color = \"green\";\n      toast.success(\"Video criado com sucesso.\");\n    }\n  },\n  mounted() {\n    modal.listen(this.setToggle);\n  }\n};","map":{"version":3,"names":["InputForm","useModalForm","SpinnerLoading","useToast","toast","modal","name","components","data","uploadStatus","uploadProgress","toggle","original_title","year","overview","vote_average","methods","setToggle","bool","updateData","input","field","value","sendForm","console","log","document","querySelector","files","stream","pipeTo","fetch","method","body","closeModal","close","checkUpload","event","progress","loaded","total","toString","substring","indexOf","endUpload","response","sucess","$refs","upload","style","color","success","mounted","listen"],"sources":["C:\\Users\\Adonai\\Documents\\Projetos\\netflix\\frontend\\src\\components\\ModalFormMovie.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-movie\" v-if=\"toggle\">\r\n    <form name=\"movie\" ref=\"form\">\r\n      <h1>Adicionar Filme</h1>\r\n\r\n      <InputForm\r\n        class=\"input\"\r\n        :placeholder=\"'Título do filme'\"\r\n        :name=\"'original_title'\"\r\n        @vmodel=\"updateData\"\r\n      />\r\n      <InputForm\r\n        class=\"input\"\r\n        :placeholder=\"'Descrição'\"\r\n        :name=\"'overview'\"\r\n        @vmodel=\"updateData\"\r\n      />\r\n      <div class=\"year-vote\">\r\n        <InputForm\r\n          class=\"input\"\r\n          :type=\"'number'\"\r\n          :placeholder=\"'Ano lançamento'\"\r\n          :name=\"'year'\"\r\n          @vmodel=\"updateData\"\r\n        />\r\n        <InputForm\r\n          class=\"input\"\r\n          :type=\"'number'\"\r\n          :placeholder=\"'Avaliação'\"\r\n          :name=\"'vote_average'\"\r\n          @vmodel=\"updateData\"\r\n        />\r\n      </div>\r\n      <h4>Imagem de capa</h4>\r\n      <input\r\n        class=\"file-upload\"\r\n        type=\"file\"\r\n        name=\"image-preview\"\r\n        id=\"image-preview\"\r\n        ref=\"image\"\r\n      />\r\n      <h4>Imagem de background</h4>\r\n      <input\r\n        class=\"file-upload\"\r\n        type=\"file\"\r\n        name=\"image-background\"\r\n        id=\"image-background\"\r\n      />\r\n      <h4>Video do filme</h4>\r\n      <input class=\"file-upload\" type=\"file\" name=\"video\" id=\"video\" />\r\n\r\n      <div class=\"endform\">\r\n        <div class=\"uploadProgress\">\r\n          <div>\r\n            <SpinnerLoading v-if=\"uploadStatus\" />\r\n          </div>\r\n          <p ref=\"upload\">{{ uploadStatus }} {{ uploadProgress }}</p>\r\n        </div>\r\n        <div class=\"button\">\r\n          <button class=\"back\" @click.prevent=\"closeModal\">Voltar</button>\r\n          <button class=\"save\" @click.prevent=\"sendForm\">Salvar</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport InputForm from \"./InputForm.vue\";\r\nimport useModalForm from \"@/hooks/useModalForm\";\r\n// import MovieService from \"@/common/service/movie.service\";\r\nimport SpinnerLoading from \"./SpinnerLoading.vue\";\r\nimport { useToast } from \"vue-toastification\";\r\n\r\nconst toast = useToast();\r\nconst modal = useModalForm();\r\n\r\nexport default {\r\n  name: \"FormMovie\",\r\n  components: { InputForm, SpinnerLoading },\r\n  data() {\r\n    return {\r\n      uploadStatus: \"\",\r\n      uploadProgress: \"\",\r\n      toggle: false,\r\n      original_title: \"\",\r\n      year: \"\",\r\n      overview: \"\",\r\n      vote_average: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    setToggle(bool) {\r\n      this.toggle = bool;\r\n    },\r\n    updateData(input) {\r\n      this[input.field] = input.value;\r\n    },\r\n    async sendForm() {\r\n      console.log(document.querySelector(\"#video\").files[0].stream().pipeTo(console.log));\r\n      fetch('http://localhost:5077/movie/test', {\r\n        method: 'POST',\r\n        body: document.querySelector(\"#video\").files[0]\r\n      })\r\n      // this.uploadStatus = \"Uploading\";\r\n      // const fd = new FormData(this.$refs.form);\r\n      // var response = await MovieService.post(fd, this.checkUpload);\r\n      // if(response.sucess) this.endUpload(response);\r\n    },\r\n    closeModal() {\r\n      this.uploadStatus = \"\";\r\n      this.uploadProgress = \"\";\r\n      modal.close();\r\n\r\n    },\r\n    checkUpload(event) {\r\n      let progress = ((event.loaded * 100) / event.total).toString()\r\n      this.uploadProgress = `- ${progress.substring(0, progress.indexOf(\".\"))}%`;\r\n      if(event.progress == 1){\r\n        this.uploadProgress = \"\";\r\n        this.uploadStatus = \"Processing\"\r\n      }\r\n    },\r\n    endUpload(response) {\r\n      if (response.sucess) {\r\n        this.uploadStatus = \"Sucessfully\";\r\n        this.uploadProgress = \"\";\r\n      }\r\n      this.$refs.upload.style.color = \"green\"\r\n      toast.success(\"Video criado com sucesso.\")\r\n    },\r\n  },\r\n  mounted() {\r\n    modal.listen(this.setToggle);\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\nh1,\r\nh4 {\r\n  color: rgba(255, 255, 255, 0.852);\r\n}\r\n\r\nh4 {\r\n  margin-bottom: 10px;\r\n}\r\n.form-movie {\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 101;\r\n  background-color: rgba(0, 0, 0, 0.579);\r\n  display: grid;\r\n  place-items: center;\r\n  overflow: auto;\r\n}\r\n\r\nform {\r\n  background-image: url(\"@/assets/imgs/background-login.jpg\");\r\n  box-shadow: inset 0 0 0 2000px rgb(0, 0, 0);\r\n  width: 500px;\r\n  height: auto;\r\n  border-radius: 6px;\r\n  padding: 50px 60px;\r\n  overflow: auto;\r\n}\r\n\r\n.year-vote {\r\n  margin: 0px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  gap: 5px;\r\n  height: 50px;\r\n}\r\n\r\n.file-upload {\r\n  color: white;\r\n}\r\n\r\n.file-upload::file-selector-button {\r\n  background-color: rgb(207, 75, 75);\r\n  padding: 5px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: white;\r\n}\r\n\r\n.button {\r\n  display: flex;\r\n  height: 100%;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  gap: 5px;\r\n}\r\n\r\nbutton {\r\n  padding: 8px 30px;\r\n  border: none;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n}\r\nbutton.save {\r\n  background-color: rgb(169, 29, 29);\r\n  color: white;\r\n}\r\n\r\nbutton.back {\r\n  background-color: #353535;\r\n}\r\n\r\n.endform {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 50px;\r\n}\r\n\r\n.uploadProgress {\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  gap: 15px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n}\r\n</style>\r\n"],"mappings":"AAmEA,OAAOA,SAAQ,MAAO,iBAAiB;AACvC,OAAOC,YAAW,MAAO,sBAAsB;AAC/C;AACA,OAAOC,cAAa,MAAO,sBAAsB;AACjD,SAASC,QAAO,QAAS,oBAAoB;AAE7C,MAAMC,KAAI,GAAID,QAAQ,EAAE;AACxB,MAAME,KAAI,GAAIJ,YAAY,EAAE;AAE5B,eAAe;EACbK,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IAAEP,SAAS;IAAEE;EAAe,CAAC;EACzCM,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE,EAAE;MAClBC,MAAM,EAAE,KAAK;MACbC,cAAc,EAAE,EAAE;MAClBC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACC,IAAI,EAAE;MACd,IAAI,CAACP,MAAK,GAAIO,IAAI;IACpB,CAAC;IACDC,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAACA,KAAK,CAACC,KAAK,IAAID,KAAK,CAACE,KAAK;IACjC,CAAC;IACD,MAAMC,QAAQA,CAAA,EAAG;MACfC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,MAAM,EAAE,CAACC,MAAM,CAACN,OAAO,CAACC,GAAG,CAAC,CAAC;MACnFM,KAAK,CAAC,kCAAkC,EAAE;QACxCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEP,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC,CAAC;MAChD,CAAC;MACD;MACA;MACA;MACA;IACF,CAAC;;IACDM,UAAUA,CAAA,EAAG;MACX,IAAI,CAACzB,YAAW,GAAI,EAAE;MACtB,IAAI,CAACC,cAAa,GAAI,EAAE;MACxBL,KAAK,CAAC8B,KAAK,EAAE;IAEf,CAAC;IACDC,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAIC,QAAO,GAAI,CAAED,KAAK,CAACE,MAAK,GAAI,GAAG,GAAIF,KAAK,CAACG,KAAK,EAAEC,QAAQ,EAAC;MAC7D,IAAI,CAAC/B,cAAa,GAAK,KAAI4B,QAAQ,CAACI,SAAS,CAAC,CAAC,EAAEJ,QAAQ,CAACK,OAAO,CAAC,GAAG,CAAC,CAAE,GAAE;MAC1E,IAAGN,KAAK,CAACC,QAAO,IAAK,CAAC,EAAC;QACrB,IAAI,CAAC5B,cAAa,GAAI,EAAE;QACxB,IAAI,CAACD,YAAW,GAAI,YAAW;MACjC;IACF,CAAC;IACDmC,SAASA,CAACC,QAAQ,EAAE;MAClB,IAAIA,QAAQ,CAACC,MAAM,EAAE;QACnB,IAAI,CAACrC,YAAW,GAAI,aAAa;QACjC,IAAI,CAACC,cAAa,GAAI,EAAE;MAC1B;MACA,IAAI,CAACqC,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,KAAI,GAAI,OAAM;MACtC9C,KAAK,CAAC+C,OAAO,CAAC,2BAA2B;IAC3C;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR/C,KAAK,CAACgD,MAAM,CAAC,IAAI,CAACpC,SAAS,CAAC;EAC9B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}