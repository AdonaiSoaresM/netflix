{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e3b5433e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"overlay-x\"\n};\nconst _hoisted_2 = {\n  class: \"overlay-y\"\n};\nconst _hoisted_3 = {\n  class: \"movie-info\"\n};\nconst _hoisted_4 = {\n  class: \"title\"\n};\nconst _hoisted_5 = {\n  class: \"info\"\n};\nconst _hoisted_6 = {\n  class: \"vote\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"year\"\n}, \"2022\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"overview\"\n};\nconst _hoisted_9 = {\n  class: \"buttons\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"list\"\n}, \"+ Minha Lista\", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"genre\"\n}, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"Gêneros: \"), /*#__PURE__*/_createTextVNode(\" Drama, Comédia, Animação \")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.toggle ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"movie-target\",\n    id: \"movie-target\",\n    style: _normalizeStyle(`\n    background-image: url(${$data.urlBlob});\n    `)\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", _hoisted_4, _toDisplayString(this.movie.original_title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", _hoisted_6, _toDisplayString($options.getVote()) + \" pontos\", 1 /* TEXT */), _hoisted_7]), _createElementVNode(\"p\", _hoisted_8, _toDisplayString(this.movie.overview), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    class: \"play\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToMovie && $options.goToMovie(...args))\n  }, \"Assistir\"), _hoisted_10]), _hoisted_11])])])], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","_createElementVNode","$data","toggle","_createElementBlock","id","style","_normalizeStyle","urlBlob","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","movie","original_title","_hoisted_5","_hoisted_6","$options","getVote","_hoisted_7","_hoisted_8","overview","_hoisted_9","onClick","_cache","args","goToMovie","_hoisted_10","_hoisted_11"],"sources":["C:\\Users\\Adonai\\Documents\\Projetos\\netflix\\frontend\\src\\components\\MovieTarget.vue"],"sourcesContent":["<template>\r\n  <div\r\n    v-if=\"toggle\"\r\n    class=\"movie-target\"\r\n    id=\"movie-target\"\r\n    :style=\"`\r\n    background-image: url(${urlBlob});\r\n    `\"\r\n  >\r\n    <div class=\"overlay-x\">\r\n      <div class=\"overlay-y\">\r\n        <div class=\"movie-info\">\r\n          <p class=\"title\">{{ this.movie.original_title }}</p>\r\n          <div class=\"info\">\r\n            <p class=\"vote\">{{ getVote() }} pontos</p>\r\n            <p class=\"year\">2022</p>\r\n          </div>\r\n          <p class=\"overview\">\r\n            {{ this.movie.overview }}\r\n          </p>\r\n          <div class=\"buttons\">\r\n            <button class=\"play\" @click=\"goToMovie\">Assistir</button>\r\n            <button class=\"list\">+ Minha Lista</button>\r\n          </div>\r\n          <p class=\"genre\">\r\n            <strong>Gêneros: </strong> Drama, Comédia, Animação\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport useMovieTarget from \"@/hooks/useMovieTarget\";\r\nimport URL_BASE from \"@/common/config/config\";\r\nimport { useToast } from \"vue-toastification\";\r\n\r\nconst toast = useToast();\r\nconst event = useMovieTarget();\r\n\r\nexport default {\r\n  name: \"MovieTarget\",\r\n  data() {\r\n    return {\r\n      toggle: false,\r\n      movie: null,\r\n      mymovie: false,\r\n      urlBlob: null,\r\n    };\r\n  },\r\n  methods: {\r\n    getVote() {\r\n      let vote = this.movie.vote_average;\r\n      if (vote.toString().includes(\".\")) {\r\n        return vote;\r\n      } else {\r\n        return vote + \".0\";\r\n      }\r\n    },\r\n    async toggleMovie(param) {\r\n      this.animateHeader();\r\n      this.movie = { ...param.movie };\r\n      this.mymovie = param.mymovie;\r\n      await this.sendURLBackground();\r\n      this.toggle = true;\r\n    },\r\n    animateHeader() {\r\n      const home = document.querySelector(\".home\");\r\n      const header = document.querySelector(\".header\");\r\n      home.addEventListener(\"scroll\", (event) => {\r\n        if (event.target.scrollTop < 100) {\r\n          header.style.position = \"fixed\";\r\n          header.style.backgroundColor = \"\";\r\n        } else {\r\n          header.style.backgroundColor = \"rgb(25, 25, 25)\";\r\n        }\r\n      });\r\n      home.scrollTo(0, 1000);\r\n      header.style.position = \"fixed\";\r\n      header.style.backgroundColor = \"\";\r\n      home.scroll(0, 0);\r\n    },\r\n    async sendURLBackground() {\r\n      if (this.mymovie) {\r\n        await this.setBlobImage();\r\n      } else {\r\n        this.urlBlob = `https://image.tmdb.org/t/p/original${this.movie.backdrop_path}`;\r\n      }\r\n    },\r\n    async setBlobImage() {\r\n      await fetch(\r\n        `${URL_BASE}/movie/files/${this.movie.id}/image-background.jpg`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${window.localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      ).then((response) => {\r\n        response.blob().then((blob) => {\r\n          this.urlBlob = URL.createObjectURL(blob);\r\n        });\r\n      });\r\n    },\r\n    goToMovie() {\r\n      if (!this.mymovie) {\r\n        toast.warning(\"Você só pode assistir os seus filmes.\");\r\n        return;\r\n      }\r\n      this.$router.push({\r\n        name: \"Movie\",\r\n        query: {\r\n          id: this.movie.id,\r\n        },\r\n      });\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    event.listen(this.toggleMovie);\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.movie-target {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: auto 90%;\r\n  background-position: right top 0%;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.movie-info {\r\n  padding-top: 200px;\r\n}\r\n\r\n.title {\r\n  color: rgba(255, 255, 255, 0.948);\r\n  font-size: 50px;\r\n  font-weight: 800;\r\n  margin: 0px;\r\n}\r\n\r\n.info {\r\n  display: flex;\r\n  font-weight: 600;\r\n  gap: 18px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.overview {\r\n  width: 700px;\r\n  color: rgb(164, 158, 158);\r\n}\r\n\r\n.buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 60px;\r\n}\r\n\r\n.buttons button {\r\n  padding: 10px 15px;\r\n  font-weight: 600;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton.play {\r\n  background-color: rgb(255, 255, 255, 0.948);\r\n  color: #000;\r\n}\r\n\r\nbutton.list {\r\n  color: rgb(164, 158, 158);\r\n  background-color: rgb(44, 42, 42);\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #686767;\r\n}\r\n\r\n.genre {\r\n  color: rgb(164, 158, 158);\r\n  margin-top: 30px;\r\n}\r\n\r\n.vote {\r\n  color: rgb(80, 161, 80);\r\n}\r\n\r\n.year {\r\n  color: #fff;\r\n  font-weight: 600;\r\n}\r\n.overlay-x {\r\n  width: inherit;\r\n  height: inherit;\r\n  background: linear-gradient(to right, rgb(25, 25, 25) 25%, transparent 90%);\r\n}\r\n\r\n.overlay-y {\r\n  width: inherit;\r\n  height: inherit;\r\n  background: linear-gradient(to top, rgb(25, 25, 25) 10%, transparent 90%);\r\n  padding-left: 30px;\r\n}\r\n</style>\r\n"],"mappings":";;;EASSA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAM;gEACfC,mBAAA,CAAwB;EAArBD,KAAK,EAAC;AAAM,GAAC,MAAI;;EAEnBA,KAAK,EAAC;AAAU;;EAGdA,KAAK,EAAC;AAAS;iEAElBC,mBAAA,CAA2C;EAAnCD,KAAK,EAAC;AAAM,GAAC,eAAa;iEAEpCC,mBAAA,CAEI;EAFDD,KAAK,EAAC;AAAO,I,aACdC,mBAAA,CAA0B,gBAAlB,WAAS,G,8BAAS,4BAC5B,E;;;SAxBAC,KAAA,CAAAC,MAAM,I,cADdC,mBAAA,CA6BM;;IA3BJJ,KAAK,EAAC,cAAc;IACpBK,EAAE,EAAC,cAAc;IAChBC,KAAK,EAAAC,eAAA;4BAAiCL,KAAA,CAAAM,OAAO;;MAI9CP,mBAAA,CAoBM,OApBNQ,UAoBM,GAnBJR,mBAAA,CAkBM,OAlBNS,UAkBM,GAjBJT,mBAAA,CAgBM,OAhBNU,UAgBM,GAfJV,mBAAA,CAAoD,KAApDW,UAAoD,EAAAC,gBAAA,MAA3BC,KAAK,CAACC,cAAc,kBAC7Cd,mBAAA,CAGM,OAHNe,UAGM,GAFJf,mBAAA,CAA0C,KAA1CgB,UAA0C,EAAAJ,gBAAA,CAAvBK,QAAA,CAAAC,OAAO,MAAK,SAAO,iBACtCC,UAAwB,C,GAE1BnB,mBAAA,CAEI,KAFJoB,UAEI,EAAAR,gBAAA,MADMC,KAAK,CAACQ,QAAQ,kBAExBrB,mBAAA,CAGM,OAHNsB,UAGM,GAFJtB,mBAAA,CAAyD;IAAjDD,KAAK,EAAC,MAAM;IAAEwB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,QAAA,CAAAS,SAAA,IAAAT,QAAA,CAAAS,SAAA,IAAAD,IAAA,CAAS;KAAE,UAAQ,GAChDE,WAA2C,C,GAE7CC,WAEI,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}