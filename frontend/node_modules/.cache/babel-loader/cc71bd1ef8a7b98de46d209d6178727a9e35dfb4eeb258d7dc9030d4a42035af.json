{"ast":null,"code":"import api from \"../api/api\";\nasync function login(body) {\n  const response = await api.post(\"user/login\", body);\n  if (response.sucess) await window.localStorage.setItem(\"token\", response.data.token);\n  return response;\n}\nasync function validateToken() {\n  let response;\n  await api.get(\"user/validate\").then(resp => {\n    if (resp.status) response = true;\n  }).catch(() => {\n    response = false;\n  });\n  return response;\n}\nexport default {\n  login,\n  validateToken\n};","map":{"version":3,"names":["api","login","body","response","post","sucess","window","localStorage","setItem","data","token","validateToken","get","then","resp","status","catch"],"sources":["C:/Users/Adonai/Documents/Projetos/netflix/frontend/src/common/service/jwt.service.js"],"sourcesContent":["import api from \"../api/api\";\r\n\r\nasync function login(body){\r\n    const response = await api.post(\"user/login\", body)\r\n    \r\n    if(response.sucess) \r\n       await window.localStorage.setItem(\"token\",response.data.token)\r\n\r\n    return response\r\n}\r\n\r\nasync function validateToken(){\r\n    let response;\r\n    await api.get(\"user/validate\")\r\n        .then(resp =>  {\r\n            if(resp.status) response = true})\r\n        .catch(() => {\r\n            response = false});\r\n\r\n    return response\r\n    \r\n}\r\n\r\nexport default { login, validateToken}\r\n\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,YAAY;AAE5B,eAAeC,KAAKA,CAACC,IAAI,EAAC;EACtB,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,YAAY,EAAEF,IAAI,CAAC;EAEnD,IAAGC,QAAQ,CAACE,MAAM,EACf,MAAMC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACL,QAAQ,CAACM,IAAI,CAACC,KAAK,CAAC;EAEjE,OAAOP,QAAQ;AACnB;AAEA,eAAeQ,aAAaA,CAAA,EAAE;EAC1B,IAAIR,QAAQ;EACZ,MAAMH,GAAG,CAACY,GAAG,CAAC,eAAe,CAAC,CACzBC,IAAI,CAACC,IAAI,IAAK;IACX,IAAGA,IAAI,CAACC,MAAM,EAAEZ,QAAQ,GAAG,IAAI;EAAA,CAAC,CAAC,CACpCa,KAAK,CAAC,MAAM;IACTb,QAAQ,GAAG,KAAK;EAAA,CAAC,CAAC;EAE1B,OAAOA,QAAQ;AAEnB;AAEA,eAAe;EAAEF,KAAK;EAAEU;AAAa,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}